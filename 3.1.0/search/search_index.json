{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"GW2ML","text":"<p>GW2ML is a Java library for fast and non-cached access to the data provided by the Guild Wars 2 game client via the MumbleLink mechanism.</p>"},{"location":"#usage","title":"Usage","text":"<p>GW2ML provides an API that is designed to be as simple and intuitive to use as possible while remaining efficient. The primary entry-point is <code>MumbleLink.open()</code> which must be used to open a view of the MumbleLink data before anything can be read. Once that is done the data can be accessed through various getter methods on the returned view object.</p> <p>The following sample prints all data every few seconds:</p> <pre><code>public class Sample {\n\n    public static void main(String[] args) throws InterruptedException {\n        try (MumbleLink mumbleLink = MumbleLink.open()) {\n            while (true) {\n                float[] buffer = new float[3];\n\n                System.out.println(\"=== GW2ML Sample ===\");\n                System.out.printf(\"uiVersion:\\t\\t\\t\\t%s%n\", mumbleLink.getUIVersion());\n                System.out.printf(\"uiTick:\\t\\t\\t\\t\\t%s%n\", mumbleLink.getUITick());\n                System.out.printf(\"fAvatarPosition:\\t\\t%s%n\", Arrays.toString(mumbleLink.getAvatarPosition(buffer)));\n                System.out.printf(\"fAvatarFront:\\t\\t\\t%s%n\", Arrays.toString(mumbleLink.getAvatarFront(buffer)));\n                System.out.printf(\"fAvatarTop:\\t\\t\\t\\t%s%n\", Arrays.toString(mumbleLink.getAvatarTop(buffer)));\n                System.out.printf(\"name:\\t\\t\\t\\t\\t%s%n\", mumbleLink.getName());\n                System.out.printf(\"fCameraPosition:\\t\\t%s%n\", Arrays.toString(mumbleLink.getCameraPosition(buffer)));\n                System.out.printf(\"fCameraFront:\\t\\t\\t%s%n\", Arrays.toString(mumbleLink.getCameraFront(buffer)));\n                System.out.printf(\"fCameraTop:\\t\\t\\t\\t%s%n\", Arrays.toString(mumbleLink.getCameraTop(buffer)));\n                System.out.printf(\"identity:\\t\\t\\t\\t%s%n\", mumbleLink.getIdentity());\n                System.out.printf(\"contextLength:\\t\\t\\t%s%n\", mumbleLink.getContextLength());\n                System.out.printf(\"ctx_ServerAddress:\\t\\t%s%n\", mumbleLink.getContext().getServerAddress());\n                System.out.printf(\"ctx_MapID:\\t\\t\\t\\t%s%n\", mumbleLink.getContext().getMapID());\n\n                long mapType = mumbleLink.getContext().getMapType();\n                System.out.printf(\n                    \"ctx_MapType:\\t\\t\\t%s (%s)%n\",\n                    mapType, MapType.valueOf(mapType)\n                );\n\n                System.out.printf(\"ctx_ShardID:\\t\\t\\t%s%n\", Integer.toBinaryString(mumbleLink.getContext().getShardID()));\n                System.out.printf(\"ctx_Instance:\\t\\t\\t%s%n\", mumbleLink.getContext().getInstance());\n                System.out.printf(\"ctx_BuildID:\\t\\t\\t%s%n\", mumbleLink.getContext().getBuildID());\n\n                int uiState = mumbleLink.getContext().getUIState();\n                System.out.printf(\n                    \"ctx_UIState:\\t\\t\\t%s (isMapOpen=%s, isCompassTopRight=%s, isCompassRotationEnabled=%s, isGameFocused=%s, isInCompetitiveMode=%s, isTextFieldFocused=%s, isInCombat=%s)%n\",\n                    Integer.toBinaryString(uiState),\n                    UIState.isMapOpen(uiState),\n                    UIState.isCompassTopRight(uiState),\n                    UIState.isCompassRotationEnabled(uiState),\n                    UIState.isGameFocused(uiState),\n                    UIState.isInCompetitiveMode(uiState),\n                    UIState.isTextFieldFocused(uiState),\n                    UIState.isInCombat(uiState)\n                );\n\n                System.out.printf(\"ctx_CompassWidth:\\t\\t%s%n\", mumbleLink.getContext().getCompassWidth());\n                System.out.printf(\"ctx_CompassHeight:\\t\\t%s%n\", mumbleLink.getContext().getCompassHeight());\n                System.out.printf(\"ctx_CompassRotation:\\t%s%n\", mumbleLink.getContext().getCompassRotation());\n                System.out.printf(\"ctx_PlayerX:\\t\\t\\t%s%n\", mumbleLink.getContext().getPlayerX());\n                System.out.printf(\"ctx_PlayerY:\\t\\t\\t%s%n\", mumbleLink.getContext().getPlayerY());\n                System.out.printf(\"ctx_MapCenterX:\\t\\t\\t%s%n\", mumbleLink.getContext().getMapCenterX());\n                System.out.printf(\"ctx_MapCenterY:\\t\\t\\t%s%n\", mumbleLink.getContext().getMapCenterY());\n                System.out.printf(\"ctx_MapScale:\\t\\t\\t%s%n\", mumbleLink.getContext().getMapScale());\n                System.out.printf(\"ctx_ProcessID:\\t\\t\\t%s%n\", mumbleLink.getContext().getProcessID());\n\n                byte mountType = mumbleLink.getContext().getMountType();\n                System.out.printf(\n                    \"ctx_MountType:\\t\\t\\t%s (%s)%n\",\n                    mountType, MountType.valueOf(mountType)\n                );\n\n                System.out.printf(\"description:\\t\\t\\t%s%n%n\", mumbleLink.getDescription());\n\n                Thread.sleep(Duration.ofSeconds(5));\n            }\n        }\n    }\n\n}\n</code></pre>"},{"location":"license/","title":"License","text":""},{"location":"license/#gw2ml","title":"GW2ML","text":"<pre><code>MIT License\n\nCopyright (c) 2019-2025 Leon Linhart\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n</code></pre>"},{"location":"license/#guild-wars-2","title":"Guild Wars 2","text":"<p>\u00a9 ArenaNet LLC. All rights reserved. NCSOFT, ArenaNet, Guild Wars, Guild Wars 2, GW2, Guild Wars 2: Heart of Thorns, Guild Wars 2: Path of Fire, Guild Wars 2: End of Dragons, and Guild Wars 2: Secrets of the Obscure and all associated logos, designs, and composite marks are trademarks or registered trademarks of NCSOFT Corporation.</p> <p>As taken from Guild Wars 2 Content Terms of Use on 2024-01-23 00:57 CET.</p>"}]}